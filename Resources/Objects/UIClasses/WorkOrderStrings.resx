<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActualEnd" xml:space="preserve">
    <value>Actual end</value>
  </data>
  <data name="ActualStart" xml:space="preserve">
    <value>Actual start</value>
  </data>
  <data name="AdditionalDescription" xml:space="preserve">
    <value>Additional description</value>
  </data>
  <data name="Article" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="ArticleCode" xml:space="preserve">
    <value>Article code</value>
  </data>
  <data name="BarCodeString" xml:space="preserve">
    <value>Barcode</value>
  </data>
  <data name="ComplianceCount" xml:space="preserve">
    <value>Compliance count</value>
  </data>
  <data name="ComplianceScoreAverage" xml:space="preserve">
    <value>Compliance average score</value>
  </data>
  <data name="ComplianceScoreAverageColor" xml:space="preserve">
    <value>Compliance average score color</value>
  </data>
  <data name="ComplianceScoreMin" xml:space="preserve">
    <value>Compliance min score</value>
  </data>
  <data name="ComplianceScoreMinColor" xml:space="preserve">
    <value>Compliance min score color</value>
  </data>
  <data name="DateCreated" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="DeadlineDate" xml:space="preserve">
    <value>Deadline date</value>
  </data>
  <data name="DrawingNumber" xml:space="preserve">
    <value>Drawing number</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="EarliestDate" xml:space="preserve">
    <value>Earliest date</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End date</value>
  </data>
  <data name="IsAutoTimeRegistration" xml:space="preserve">
    <value>Auto time registration</value>
  </data>
  <data name="IsNoteExists" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="IsSubWorkOrder" xml:space="preserve">
    <value>Sub work order</value>
  </data>
  <data name="MeasurementUnit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="NotePlainText" xml:space="preserve">
    <value>Plain text note</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="OperationsColor" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="OrgUnit_Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Overdue" xml:space="preserve">
    <value>Overdue</value>
  </data>
  <data name="PlanningStrategy" xml:space="preserve">
    <value>Planning strategy</value>
  </data>
  <data name="PostEndDate" xml:space="preserve">
    <value>Post end date</value>
  </data>
  <data name="PreparationStartDate" xml:space="preserve">
    <value>Preparation start date</value>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="ProductLotGenerationRule" xml:space="preserve">
    <value>Product lot generation rule</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="ProjectLine" xml:space="preserve">
    <value>Project line</value>
  </data>
  <data name="ProjectLineDeadlineDate" xml:space="preserve">
    <value>Project line delivery date</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity</value>
  </data>
  <data name="QuantityProduced" xml:space="preserve">
    <value>Quantity produced</value>
  </data>
  <data name="QuantityWreck" xml:space="preserve">
    <value>Quantity wreck</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>Remark</value>
  </data>
  <data name="RemarkColor" xml:space="preserve">
    <value>Remark color</value>
  </data>
  <data name="RiskCount" xml:space="preserve">
    <value>Risk count</value>
  </data>
  <data name="RiskScoreAverage" xml:space="preserve">
    <value>Risk average score</value>
  </data>
  <data name="RiskScoreAverageColor" xml:space="preserve">
    <value>Risk average score color</value>
  </data>
  <data name="RiskScoreMax" xml:space="preserve">
    <value>Risk max score</value>
  </data>
  <data name="RiskScoreMaxColor" xml:space="preserve">
    <value>Risk max score color</value>
  </data>
  <data name="Sequence" xml:space="preserve">
    <value>Sequence</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="UsedHours" xml:space="preserve">
    <value>Used hours</value>
  </data>
  <data name="WorkCost" xml:space="preserve">
    <value>Work cost</value>
  </data>
  <data name="WorkflowItem_Drawing" xml:space="preserve">
    <value>Drawing</value>
  </data>
  <data name="WorkflowItem_Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="WorkHours" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="WorkHoursEach" xml:space="preserve">
    <value>Hours per unit</value>
  </data>
  <data name="WorkOrderAssemblyTreeLine" xml:space="preserve">
    <value>Root assembly tree line</value>
  </data>
  <data name="Parent" xml:space="preserve">
    <value>Parent</value>
  </data>
  <data name="Density" xml:space="preserve">
    <value>Density, kg/m3</value>
  </data>
  <data name="Diameter" xml:space="preserve">
    <value>Diameter, mm</value>
  </data>
  <data name="Dimension" xml:space="preserve">
    <value>Dimension</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Thickness / height, mm</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Length, mm</value>
  </data>
  <data name="Margin" xml:space="preserve">
    <value>Margin, mm</value>
  </data>
  <data name="Quality" xml:space="preserve">
    <value>Quality</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Weight, kg</value>
  </data>
  <data name="WeightTotal" xml:space="preserve">
    <value>Weight total, kg</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width, mm</value>
  </data>
  <data name="CustomerArticleCode" xml:space="preserve">
    <value>Customer's article number</value>
  </data>
  <data name="EmailCount" xml:space="preserve">
    <value>Email count</value>
  </data>
  <data name="FileCount" xml:space="preserve">
    <value>File count</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ExportCode" xml:space="preserve">
    <value>Export code</value>
  </data>
  <data name="StringField1" xml:space="preserve">
    <value>String field 1</value>
  </data>
  <data name="StringField2" xml:space="preserve">
    <value>String field 2</value>
  </data>
  <data name="StringField3" xml:space="preserve">
    <value>String field 3</value>
  </data>
  <data name="StringField4" xml:space="preserve">
    <value>String field 4</value>
  </data>
  <data name="StringField5" xml:space="preserve">
    <value>String field 5</value>
  </data>
  <data name="IsMainWorkOrderForProjectLine" xml:space="preserve">
    <value>Main for project line</value>
  </data>
  <data name="StringField10" xml:space="preserve">
    <value>String field 10</value>
  </data>
  <data name="StringField6" xml:space="preserve">
    <value>String field 6</value>
  </data>
  <data name="StringField7" xml:space="preserve">
    <value>String field 7</value>
  </data>
  <data name="StringField8" xml:space="preserve">
    <value>String field 8</value>
  </data>
  <data name="StringField9" xml:space="preserve">
    <value>String field 9</value>
  </data>
  <data name="PriorityDate" xml:space="preserve">
    <value>Priority date</value>
  </data>
  <data name="PlannedEnd" xml:space="preserve">
    <value>Planned end</value>
  </data>
  <data name="PlannedPostEnd" xml:space="preserve">
    <value>Planned post end</value>
  </data>
  <data name="PlannedStart" xml:space="preserve">
    <value>Planned start</value>
  </data>
  <data name="ScheduleStatus" xml:space="preserve">
    <value>Schedule status</value>
  </data>
  <data name="IsLockedForPlanner" xml:space="preserve">
    <value>Locked</value>
  </data>
  <data name="SchedulerLastEditDate" xml:space="preserve">
    <value>When scheduled</value>
  </data>
  <data name="SchedulerPlanningStrategy" xml:space="preserve">
    <value>Scheduled strategy</value>
  </data>
  <data name="User_SchedulerLastEdit" xml:space="preserve">
    <value>Scheduled by</value>
  </data>
  <data name="DrawingReference" xml:space="preserve">
    <value>Drawing reference</value>
  </data>
  <data name="PercentComplete" xml:space="preserve">
    <value>Finished %</value>
  </data>
  <data name="RemainsHours" xml:space="preserve">
    <value>Remaining hours</value>
  </data>
  <data name="PlannedHours" xml:space="preserve">
    <value>Planned hours</value>
  </data>
  <data name="TimeRecords_Cost" xml:space="preserve">
    <value>Time registration cost</value>
  </data>
  <data name="ProcessNumber" xml:space="preserve">
    <value>Work package number</value>
  </data>
  <data name="ProcessNumberApplied" xml:space="preserve">
    <value>Work package number assigned</value>
  </data>
  <data name="ActiveOperation" xml:space="preserve">
    <value>Active operation</value>
  </data>
  <data name="PlannedLeadTimeHours" xml:space="preserve">
    <value>Planned lead time, hours</value>
  </data>
  <data name="ArticleLocation" xml:space="preserve">
    <value>Article location</value>
  </data>
  <data name="ArticleLocation_Hint" xml:space="preserve">
    <value>For work order's article</value>
  </data>
  <data name="CustomerArticleCode_Hint" xml:space="preserve">
    <value>For the project line's product</value>
  </data>
  <data name="ExportCode_Hint" xml:space="preserve">
    <value>Comes from the main product from the project line</value>
  </data>
  <data name="ArticleDescription" xml:space="preserve">
    <value>Article description</value>
  </data>
  <data name="ArticleExportCode" xml:space="preserve">
    <value>Article export code</value>
  </data>
  <data name="ArticleStringField1" xml:space="preserve">
    <value>Article String field 1</value>
  </data>
  <data name="ArticleStringField10" xml:space="preserve">
    <value>Article String field 10</value>
  </data>
  <data name="ArticleStringField2" xml:space="preserve">
    <value>Article String field 2</value>
  </data>
  <data name="ArticleStringField3" xml:space="preserve">
    <value>Article String field 3</value>
  </data>
  <data name="ArticleStringField4" xml:space="preserve">
    <value>Article String field 4</value>
  </data>
  <data name="ArticleStringField5" xml:space="preserve">
    <value>Article String field 5</value>
  </data>
  <data name="ArticleStringField6" xml:space="preserve">
    <value>Article String field 6</value>
  </data>
  <data name="ArticleStringField7" xml:space="preserve">
    <value>Article String field 7</value>
  </data>
  <data name="ArticleStringField8" xml:space="preserve">
    <value>Article String field 8</value>
  </data>
  <data name="ArticleStringField9" xml:space="preserve">
    <value>Article String field 9</value>
  </data>
  <data name="ReadyToStartOperation" xml:space="preserve">
    <value>Ready to start operation</value>
  </data>
  <data name="QuantityOnStock" xml:space="preserve">
    <value>Quantity on stock</value>
  </data>
  <data name="ManualEnd" xml:space="preserve">
    <value>Manual end</value>
  </data>
  <data name="ManualStart" xml:space="preserve">
    <value>Manual start</value>
  </data>
  <data name="ReadyToStart" xml:space="preserve">
    <value>Ready to start</value>
  </data>
  <data name="ProjectAssemblyTreeLine" xml:space="preserve">
    <value>Original assembly tree line</value>
  </data>
  <data name="QuantityWorkPackage" xml:space="preserve">
    <value>Quantity in work packages</value>
  </data>
  <data name="ProjectLocation" xml:space="preserve">
    <value>Project location</value>
  </data>
  <data name="DrawingNumber_ProjectLine" xml:space="preserve">
    <value>Project line drawing number</value>
  </data>
  <data name="WorkflowItem_Drawing_ProjectLine" xml:space="preserve">
    <value>Project line drawing</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="Priority_Hint" xml:space="preserve">
    <value>Lower number - higher priority. Set 0 to disable manual priority</value>
  </data>
  <data name="ProjectType" xml:space="preserve">
    <value>Project type</value>
  </data>
</root>
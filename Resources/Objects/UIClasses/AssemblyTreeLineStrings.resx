<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Article" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="ArticleAdditionalDescription" xml:space="preserve">
    <value>Article additional description</value>
  </data>
  <data name="ArticleCode" xml:space="preserve">
    <value>Article code</value>
  </data>
  <data name="ArticleDescription" xml:space="preserve">
    <value>Article description</value>
  </data>
  <data name="ArticleJoinCode" xml:space="preserve">
    <value>Joined article code</value>
  </data>
  <data name="ArticleJoinName" xml:space="preserve">
    <value>Joined article name</value>
  </data>
  <data name="ArticleParent" xml:space="preserve">
    <value>Article parent</value>
  </data>
  <data name="ArticleType" xml:space="preserve">
    <value>Article type</value>
  </data>
  <data name="AssemblyPriceType" xml:space="preserve">
    <value>Price type</value>
  </data>
  <data name="AssemblyTreeType" xml:space="preserve">
    <value>Line type</value>
  </data>
  <data name="ComplianceCount" xml:space="preserve">
    <value>Compliance count</value>
  </data>
  <data name="ComplianceScoreAverage" xml:space="preserve">
    <value>Compliance average score</value>
  </data>
  <data name="ComplianceScoreAverageColor" xml:space="preserve">
    <value>Compliance average score color</value>
  </data>
  <data name="ComplianceScoreMin" xml:space="preserve">
    <value>Compliance min score</value>
  </data>
  <data name="ComplianceScoreMinColor" xml:space="preserve">
    <value>Compliance min score color</value>
  </data>
  <data name="CostMaterial" xml:space="preserve">
    <value>Material cost</value>
  </data>
  <data name="CostMaterial_Hint" xml:space="preserve">
    <value>Material cost per unit</value>
  </data>
  <data name="CostRequest" xml:space="preserve">
    <value>Cost from request</value>
  </data>
  <data name="CostToPricePercent" xml:space="preserve">
    <value>Fixed Markup% materials</value>
  </data>
  <data name="CostTotal" xml:space="preserve">
    <value>Cost total</value>
  </data>
  <data name="CostTotal_Hint" xml:space="preserve">
    <value>Sum cost (work+materials) per unit</value>
  </data>
  <data name="CostWork" xml:space="preserve">
    <value>Cost of work</value>
  </data>
  <data name="CostWork_Hint" xml:space="preserve">
    <value>Cost of work per unit</value>
  </data>
  <data name="CustomerArticleCode" xml:space="preserve">
    <value>Customer's article number</value>
  </data>
  <data name="CustomerLocation" xml:space="preserve">
    <value>Customer's location</value>
  </data>
  <data name="CustomerPosition" xml:space="preserve">
    <value>PO-line</value>
  </data>
  <data name="Density" xml:space="preserve">
    <value>Density, kg/m3</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Diameter" xml:space="preserve">
    <value>Diameter, mm</value>
  </data>
  <data name="Dimension" xml:space="preserve">
    <value>Dimension</value>
  </data>
  <data name="Discount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="EmailCount" xml:space="preserve">
    <value>Email count</value>
  </data>
  <data name="EmissionFromArticle" xml:space="preserve">
    <value>Emission from article, kgCO2e</value>
  </data>
  <data name="ExpandState" xml:space="preserve">
    <value>Expand state</value>
  </data>
  <data name="ExternalGuid" xml:space="preserve">
    <value>External id</value>
  </data>
  <data name="FileCount" xml:space="preserve">
    <value>File count</value>
  </data>
  <data name="FixedCost" xml:space="preserve">
    <value>Fixed material cost</value>
  </data>
  <data name="FixedCost_Hint" xml:space="preserve">
    <value>Fixed material cost per unit</value>
  </data>
  <data name="FixedKeyDG" xml:space="preserve">
    <value>Fixed CR, %</value>
  </data>
  <data name="FixedPrice" xml:space="preserve">
    <value>Fixed price</value>
  </data>
  <data name="FixedPrice_Hint" xml:space="preserve">
    <value>Fixed price per unit</value>
  </data>
  <data name="FixedWeight" xml:space="preserve">
    <value>Fixed weight, kg</value>
  </data>
  <data name="GroupInWorkOrderType" xml:space="preserve">
    <value>Group in work order materials</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Thickness / height, mm</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="IdTree" xml:space="preserve">
    <value>Id tree</value>
  </data>
  <data name="IsCustomCreated" xml:space="preserve">
    <value>Added</value>
  </data>
  <data name="IsCustomCreated_Hint" xml:space="preserve">
    <value>Yes for materials that doesn't come from work order assembly</value>
  </data>
  <data name="IsCut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="IsDefaultInSelectionGroup" xml:space="preserve">
    <value>Default in selection group</value>
  </data>
  <data name="IsNoteExists" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="IsRoot" xml:space="preserve">
    <value>Root</value>
  </data>
  <data name="IsSubAssembly" xml:space="preserve">
    <value>Sub assembly</value>
  </data>
  <data name="KeyChangePricePercent" xml:space="preserve">
    <value>Price change</value>
  </data>
  <data name="KeyCostToPrice" xml:space="preserve">
    <value>CM/cost</value>
  </data>
  <data name="KeyDB" xml:space="preserve">
    <value>CM</value>
  </data>
  <data name="KeyDBForHour" xml:space="preserve">
    <value>CM per hour</value>
  </data>
  <data name="KeyDB_Hint" xml:space="preserve">
    <value>Contribution margin</value>
  </data>
  <data name="KeyDG" xml:space="preserve">
    <value>CR</value>
  </data>
  <data name="KeyDG_Hint" xml:space="preserve">
    <value>Contribution ratio</value>
  </data>
  <data name="KeySumCostWorkForHour" xml:space="preserve">
    <value>Cost of work per hour</value>
  </data>
  <data name="KeySumPriceWorkForHour" xml:space="preserve">
    <value>Price of work per hour</value>
  </data>
  <data name="KeyWorkDB" xml:space="preserve">
    <value>CM work</value>
  </data>
  <data name="KeyWorkDBPerHour" xml:space="preserve">
    <value>CM work per hour</value>
  </data>
  <data name="KeyWorkDG" xml:space="preserve">
    <value>CR work</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Length, mm</value>
  </data>
  <data name="Margin" xml:space="preserve">
    <value>Margin, mm</value>
  </data>
  <data name="MaterialType" xml:space="preserve">
    <value>Material type</value>
  </data>
  <data name="MeasurementUnit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Name_Grid" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Name_Hint" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Name_Property" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NodeType" xml:space="preserve">
    <value>Node type</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="NotePlainText" xml:space="preserve">
    <value>Note plain text</value>
  </data>
  <data name="OrgUnit_Vendor" xml:space="preserve">
    <value>Vendor</value>
  </data>
  <data name="ParentId" xml:space="preserve">
    <value>ParentId</value>
  </data>
  <data name="ParentIdTree" xml:space="preserve">
    <value>ParentIdTree</value>
  </data>
  <data name="ParentNode" xml:space="preserve">
    <value>Parent node</value>
  </data>
  <data name="ParentRef" xml:space="preserve">
    <value>Parent line</value>
  </data>
  <data name="Pos" xml:space="preserve">
    <value>Position </value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Optional position</value>
  </data>
  <data name="PriceBasic" xml:space="preserve">
    <value>Basic price</value>
  </data>
  <data name="PriceBasic_Hint" xml:space="preserve">
    <value>Basic price per unit</value>
  </data>
  <data name="PriceDefault" xml:space="preserve">
    <value>Default price</value>
  </data>
  <data name="PriceDefault_Hint" xml:space="preserve">
    <value>Default price per unit</value>
  </data>
  <data name="PriceFromArticle" xml:space="preserve">
    <value>Price from article</value>
  </data>
  <data name="PriceListPrice" xml:space="preserve">
    <value>Pricelist price</value>
  </data>
  <data name="PriceListPrice_Hint" xml:space="preserve">
    <value>Pricelist price per unit</value>
  </data>
  <data name="PriceTotal" xml:space="preserve">
    <value>Brutto price</value>
  </data>
  <data name="PriceTotalWithoutWork" xml:space="preserve">
    <value>Price excl. work</value>
  </data>
  <data name="PriceTotalWithoutWork_Hint" xml:space="preserve">
    <value>Price excl. work per unit</value>
  </data>
  <data name="PriceTotal_Hint" xml:space="preserve">
    <value>Brutto price per unit</value>
  </data>
  <data name="PriceWithDiscount" xml:space="preserve">
    <value>Net price</value>
  </data>
  <data name="PriceWork" xml:space="preserve">
    <value>Price work</value>
  </data>
  <data name="PriceWork_Hint" xml:space="preserve">
    <value>Price work per unit</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="ProjectLine" xml:space="preserve">
    <value>Project line</value>
  </data>
  <data name="Quality" xml:space="preserve">
    <value>Quality</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Quantity, units</value>
  </data>
  <data name="QuantityArrived" xml:space="preserve">
    <value>Quantity arrived</value>
  </data>
  <data name="QuantityDelivered" xml:space="preserve">
    <value>Quantity delivered</value>
  </data>
  <data name="QuantityOverride" xml:space="preserve">
    <value>Quantity total (override)</value>
  </data>
  <data name="QuantityPieces" xml:space="preserve">
    <value>Quantity, pieces</value>
  </data>
  <data name="QuantityPiecesOverride" xml:space="preserve">
    <value>Quantity total, pieces (override)</value>
  </data>
  <data name="QuantityPiecesTotal" xml:space="preserve">
    <value>Quantity total, pieces</value>
  </data>
  <data name="QuantityProduced" xml:space="preserve">
    <value>Quantity produced</value>
  </data>
  <data name="QuantityPurchased" xml:space="preserve">
    <value>Quantity purchased</value>
  </data>
  <data name="QuantityTotal" xml:space="preserve">
    <value>Quantity total, units</value>
  </data>
  <data name="QuantityType" xml:space="preserve">
    <value>Quantity type</value>
  </data>
  <data name="RiskCount" xml:space="preserve">
    <value>Risk count</value>
  </data>
  <data name="RiskScoreAverage" xml:space="preserve">
    <value>Risk average score</value>
  </data>
  <data name="RiskScoreAverageColor" xml:space="preserve">
    <value>Risk average score color</value>
  </data>
  <data name="RiskScoreMax" xml:space="preserve">
    <value>Risk max score</value>
  </data>
  <data name="RiskScoreMaxColor" xml:space="preserve">
    <value>Risk max score color</value>
  </data>
  <data name="ScriptDownwards" xml:space="preserve">
    <value>Script downwards</value>
  </data>
  <data name="ScriptDownwards_Hint" xml:space="preserve">
    <value>Called first, from root to bottom. Good for quantity calculation</value>
  </data>
  <data name="ScriptId" xml:space="preserve">
    <value>Script id</value>
  </data>
  <data name="ScriptId_Hint" xml:space="preserve">
    <value>Allows identifying line within script </value>
  </data>
  <data name="ScriptParameters" xml:space="preserve">
    <value>Script parameters</value>
  </data>
  <data name="ScriptParameters_Hint" xml:space="preserve">
    <value>Parameters passed to scripts. Example: "param1=123 param2=Print"
Accessible in the script via AssemblyTreeLine.GetDecimalCustomProperty and AssemblyTreeLine.GetStringCustomProperty</value>
  </data>
  <data name="ScriptUpwards" xml:space="preserve">
    <value>Script upwards</value>
  </data>
  <data name="ScriptUpwards_Hint" xml:space="preserve">
    <value>Called second, from bottom to root. Good for price calculation</value>
  </data>
  <data name="SubWorkOrder" xml:space="preserve">
    <value>Sub work order</value>
  </data>
  <data name="SubWorkOrderNumber" xml:space="preserve">
    <value>Sub wok order number</value>
  </data>
  <data name="SumCost" xml:space="preserve">
    <value>Sum cost, total</value>
  </data>
  <data name="SumCostMaterial" xml:space="preserve">
    <value>Sum material cost</value>
  </data>
  <data name="SumCostMaterial_Hint" xml:space="preserve">
    <value>Summarized materials’ cost</value>
  </data>
  <data name="SumCostPerKg" xml:space="preserve">
    <value>Sum cost per kg, total</value>
  </data>
  <data name="SumCostPerProduct" xml:space="preserve">
    <value>Sum cost per product, total</value>
  </data>
  <data name="SumCostWork" xml:space="preserve">
    <value>Sum cost of work</value>
  </data>
  <data name="SumCostWork_Hint" xml:space="preserve">
    <value>Summarized work operations’ cost</value>
  </data>
  <data name="SumCost_Hint" xml:space="preserve">
    <value>Sum cost, total (work+materials)</value>
  </data>
  <data name="SumPrice" xml:space="preserve">
    <value>Sum price, total</value>
  </data>
  <data name="SumPricePerKg" xml:space="preserve">
    <value>Sum price per kg, total</value>
  </data>
  <data name="SumPricePerProduct" xml:space="preserve">
    <value>Sum price per product, total</value>
  </data>
  <data name="SumPriceWithDiscount" xml:space="preserve">
    <value>Sum price with discount, total</value>
  </data>
  <data name="SumPriceWithoutWork" xml:space="preserve">
    <value>Sum price excl. work</value>
  </data>
  <data name="SumPriceWork" xml:space="preserve">
    <value>Sum price work</value>
  </data>
  <data name="UsedCostToPricePercent" xml:space="preserve">
    <value>Markup% materials</value>
  </data>
  <data name="VendorArticle" xml:space="preserve">
    <value>Vendor article</value>
  </data>
  <data name="VendorArticleCode" xml:space="preserve">
    <value>Vendor article code</value>
  </data>
  <data name="VendorArticleDescription" xml:space="preserve">
    <value>Vendor article description</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Weight, kg</value>
  </data>
  <data name="WeightTotal" xml:space="preserve">
    <value>Weight total, kg</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width, mm</value>
  </data>
  <data name="WorkHours" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="WorkHoursEach" xml:space="preserve">
    <value>Hours per unit</value>
  </data>
  <data name="WorkOrder" xml:space="preserve">
    <value>Work order</value>
  </data>
</root>